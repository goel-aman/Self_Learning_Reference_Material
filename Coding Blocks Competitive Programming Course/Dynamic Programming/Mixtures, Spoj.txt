#include<iostream>
#include<climits>
#define l long long int
using namespace std;

l a[1000];
l dp[1000][1000];

l sum(l s,l e){
	l ans = 0;
	for(l i=s;i<=e;i++){
		ans += a[i];
		ans = ans%100;
	}
	return ans;
}

l solveMixtures(l i,l j){
	// Base Case
	
	if(i >= j){
		return 0;
	}
	
	// if the answer already there
	if(dp[i][j] != -1){
		return dp[i][j];
	}
	// We to break our expression at every possible k
	dp[i][j] = INT_MAX;
	for(l k=i;k<=j;k++){
		dp[i][j] = min(dp[i][j],solveMixtures(i,k) + solveMixtures(k+1,j) + sum(i,k)*sum(k+1,j));	
	}
	return dp[i][j];
}

int main(){
	
	int n;
	
	while((scanf("%d",&n)) != EOF){
		// Read N integers
		for(l i=0;i<n;i++){
			cin>>a[i];
		}
		
		// Init dp with -1
		for(l i=0;i<=n;i++){
			for(l j=0;j<=n;j++){
				dp[i][j] = -1;
			}
		}
		cout<<solveMixtures(0,n-1);
		cout<<endl;
	} 
	return 0;
}